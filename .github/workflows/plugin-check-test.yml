name: WP Plugin Check (Alternate)
on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
    - master
    - dev
    - 'releases/*'
  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:

jobs:
  # Runs the WP Plugin Check.
  #
  # Checks from the Plugin Review Team.
  #
  # For the detailed list of checks:
  # - https://wordpress.org/plugins/plugin-check/
  #
  # Performs the following steps:
  # - Checks out the repository.
  # - Sets up PHP.
  # - Installs Composer dependencies.
  # - Runs the Plugin Check.
  plugin-check:
    name: Plugin Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node
      uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b
      with:
        node-version: '20'

    - name: Set up PHP
      uses: shivammathur/setup-php@2.31.1
      with:
        php-version: '7.4'
        coverage: none
        tools: composer
      env:
        fail-fast: false

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Install Composer dependencies
      uses: ramsey/composer-install@v3
      with:
        composer-options: "--no-dev"

    - name: Copy the plugin files to the plugin check folder, excluding the files on .distignore.
      run: rsync -rc --exclude-from="$GITHUB_WORKSPACE/.distignore" "$GITHUB_WORKSPACE/" translation-stats/ --delete --delete-excluded

    #
    # Test action.
    #

    - name: Install WP-CLI
      run: |
        curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
        chmod +x wp-cli.phar
        mkdir -p bin
        mv wp-cli.phar bin/wp
        echo "${PWD}/bin" >> $GITHUB_PATH
      shell: bash

    - name: WP-CLI Info
      run: wp cli info
      shell: bash

    - name: Set PLUGIN_DIR
      run: |
        PLUGIN_DIR=$(realpath "$BUILD_DIR")
        echo "PLUGIN_DIR=$PLUGIN_DIR" >> "$GITHUB_ENV"

        PLUGIN_SLUG=$(basename $PLUGIN_DIR)
        echo "PLUGIN_SLUG=$PLUGIN_SLUG" >> "$GITHUB_ENV"
      shell: bash
      env:
        BUILD_DIR: 'translation-stats'

    - name: Setup wp-env
      run: |
        touch .wp-env.json
        > .wp-env.json
        echo "{ \"core\": $WP_VERSION, \"port\": 8880, \"testsPort\": 8881, \"plugins\": [ \"$PLUGIN_DIR\", \"https://downloads.wordpress.org/plugin/plugin-check.latest-stable.zip\" ] }" >> .wp-env.json

        npm -g --no-fund i @wordpress/env
        wp-env start --update
      shell: bash
      env:
        WP_VERSION: 'null'

    - name: Run Plugin Check
      run: |
        CHECKS="${CHECKS//$'\n'/,}"
        EXCLUDE_CHECKS="${EXCLUDE_CHECKS//$'\n'/,}"
        CATEGORIES="${CATEGORIES//$'\n'/,}"
        EXCLUDE_DIRS="${EXCLUDE_DIRS//$'\n'/,}"
        ADDITIONAL_ARGS="$CHECKS $EXCLUDE_CHECKS $CATEGORIES $IGNORE_WARNINGS $IGNORE_ERRORS $INCLUDE_EXPERIMENTAL $EXCLUDE_DIRS"

        # TODO: Install dependencies first, see https://github.com/wordpress/plugin-check-action/issues/66
        wp-env run cli wp plugin activate $PLUGIN_SLUG

        # Debugging information
        wp-env run cli wp plugin list
        wp-env run cli wp plugin list-checks
        wp-env run cli wp plugin list-check-categories

        # Run Plugin Check
        wp-env run cli wp plugin check $PLUGIN_SLUG --format=json $ADDITIONAL_ARGS --require=./wp-content/plugins/plugin-check/cli.php > ${{ runner.temp }}/plugin-check-results.txt
      shell: bash
      env:
        CHECKS: ''
        EXCLUDE_CHECKS: ''
        CATEGORIES: ''
        EXCLUDE_DIRS: ''
        IGNORE_WARNINGS: ''
        IGNORE_ERRORS: ''
        INCLUDE_EXPERIMENTAL: ''

    - name: Process results
      run: |
        node ${{ github.action_path }}/dist/index.js ${{ runner.temp }}/plugin-check-results.txt
      shell: bash
      env:
        INPUT_REPO_TOKEN: ${{ github.token }}
